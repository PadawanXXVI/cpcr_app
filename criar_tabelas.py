from modelos import db, Usuario, Status, Demanda, RegiaoAdministrativa
from flask import Flask
import pymysql

pymysql.install_as_MySQLdb()

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'mysql://root:Nuncy2403@localhost/cpcr'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

db.init_app(app)

with app.app_context():
    print("\nüõ†Ô∏è  Iniciando recria√ß√£o do banco de dados...")

    # DROP de tabelas exceto usu√°rios
    print("üîÅ Removendo tabelas antigas (exceto 'usuarios')...")
    db.reflect()
    for table in reversed(db.metadata.sorted_tables):
        if table.name != "usuarios":
            print(f"   ‚û§ Drop: {table.name}")
            db.engine.execute(f"DROP TABLE IF EXISTS {table.name} CASCADE")

    # Cria√ß√£o das tabelas
    print("‚úÖ Criando novas tabelas...")
    db.create_all()

    # Garantir admin com ID 1
    admin = Usuario.query.get(1)
    if admin:
        admin.is_admin = True
        db.session.commit()
        print("‚úÖ Admin com ID 1 mantido como administrador.")
    else:
        print("‚ö†Ô∏è Nenhum usu√°rio com ID 1 encontrado. Verifique o banco de dados.")

    # STATUS oficiais
    status_oficiais = [
        "Enviado √† Diretoria das Cidades",
        "Enviado √† Diretoria de Obras",
        "Devolvido √† RA de origem",
        "Improcedente - tramita√ß√£o pelo SGIA",
        "Improcedente - implanta√ß√£o ou necessita de or√ßamento pr√≥prio",
        "Improcedente - cronograma pr√≥prio da Diretoria",
        "Conclu√≠do"
    ]
    for nome in status_oficiais:
        if not Status.query.filter_by(nome=nome).first():
            db.session.add(Status(nome=nome))

    # DEMANDAS oficiais
    demandas_reais = [
        "Alambrado (Cercamento)",
        "Boca de Lobo",
        "Bueiro",
        "Cal√ßada",
        "Doa√ß√£o de Mudas",
        "Estacionamentos",
        "Galeria de √Ågua Pot√°vel",
        "Galeria de √Åguas Pluviais",
        "Implanta√ß√£o (cal√ßada, quadra, pra√ßa, estacionamento etc.)",
        "Jardim",
        "Mato Alto",
        "Meio-fio",
        "Parque Infantil",
        "Passagem Subterr√¢nea",
        "Passarela",
        "Pisos Articulados",
        "Pista de Skate",
        "Poda / Supress√£o de √Årvore",
        "Ponto de Encontro Comunit√°rio ‚Äì PEC",
        "Pra√ßa",
        "Quadra de Esporte",
        "Rampa",
        "Rua, Via ou Rodovia (pista urbana)",
        "Tapa-Buraco"
    ]
    for nome in demandas_reais:
        if not Demanda.query.filter_by(nome=nome).first():
            db.session.add(Demanda(nome=nome))

    # RAs oficiais
    ras_completas = [
        ("RA I", "Plano Piloto"),
        ("RA II", "Gama"),
        ("RA III", "Taguatinga"),
        ("RA IV", "Brazl√¢ndia"),
        ("RA V", "Sobradinho"),
        ("RA VI", "Planaltina"),
        ("RA VII", "Parano√°"),
        ("RA VIII", "N√∫cleo Bandeirante"),
        ("RA IX", "Ceil√¢ndia"),
        ("RA X", "Guar√°"),
        ("RA XI", "Cruzeiro"),
        ("RA XII", "Samambaia"),
        ("RA XIII", "Santa Maria"),
        ("RA XIV", "S√£o Sebasti√£o"),
        ("RA XV", "Recanto das Emas"),
        ("RA XVI", "Lago Sul"),
        ("RA XVII", "Riacho Fundo"),
        ("RA XVIII", "Lago Norte"),
        ("RA XIX", "Candangol√¢ndia"),
        ("RA XX", "√Åguas Claras"),
        ("RA XXI", "Riacho Fundo II"),
        ("RA XXII", "Sudoeste/Octogonal"),
        ("RA XXIII", "Varj√£o"),
        ("RA XXIV", "Park Way"),
        ("RA XXV", "SCIA/Estrutural"),
        ("RA XXVI", "Sobradinho II"),
        ("RA XXVII", "Jardim Bot√¢nico"),
        ("RA XXVIII", "Itapo√£"),
        ("RA XXIX", "SIA"),
        ("RA XXX", "Vicente Pires"),
        ("RA XXXI", "Fercal"),
        ("RA XXXII", "Sol Nascente e P√¥r do Sol"),
        ("RA XXXIII", "Arniqueira"),
        ("RA XXXIV", "Arapoanga"),
        ("RA XXXV", "√Ågua Quente")
    ]
    for codigo, nome in ras_completas:
        if not RegiaoAdministrativa.query.filter_by(codigo=codigo).first():
            db.session.add(RegiaoAdministrativa(codigo=codigo, nome=nome))

    db.session.commit()
    print("‚úÖ Banco de dados recriado e atualizado com sucesso.")
